import Head from 'next/head'
import Link from 'next/link'
import { useEffect, useState } from 'react'
import Button from '../../../components/Button'
import Main from '../../../components/Main'
import ImagesList from '../../../components/Product/ImagesList'
import ProductInfo from '../../../components/Product/ProductInfo'
import ShelfSlider from '../../../components/ShelfSlider'
import ZoomOnHover from '../../../components/ZoomOnHover'
import { useCartContext } from '../../../contexts/CartContext'
import { Product } from '../../../contexts/ProductContext'
import {
  getProductByServer,
  getProductsByQuery
} from '../../../firebase/firebaseRequests'

interface ProductProps {
  product: Product
  newReleases: Product[]
}

const Product = ({ product, newReleases }: ProductProps) => {
  const { name, mainImg, images } = product
  const [activeImage, setActiveImage] = useState(mainImg)
  const { addToCart, selectedSize } = useCartContext()

  useEffect(() => {
    setActiveImage(mainImg)
  }, [product])

  const handleProduct = (product?: Product) => {
    if (product) {
      addToCart({ ...product, quantity: 1, selectedSize: selectedSize })
    }
  }
  return (
    <Main>
      <Head>
        <title>{name} | Fireshoes ðŸ”¥</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.svg" />
      </Head>
      <section className="mx-auto w-11/12 lg:w-full">
        <article className="lg:flex justify-center gap-16 mx-auto lg:mt-8 lg:h-[70vh]">
          <div className="flex flex-col-reverse gap-4 lg:flex-row lg:gap-8">
            <ImagesList
              images={images}
              activeImage={activeImage}
              setActiveImage={setActiveImage}
              name={name}
            />
            <div>
              {activeImage && (
                <ZoomOnHover imageSrc={activeImage} imageName={name || ''} />
              )}
            </div>
          </div>
          <div className="relative mt-4 lg:mt-0">
            <ProductInfo product={product} />
            <div className="flex flex-col gap-4 mt-4 w-64 mx-auto lg:m-0">
              <Button
                primary
                widthFull
                text="Adicionar ao carrinho"
                onClick={() => handleProduct(product)}
              />
              <Link href="/checkout">
                <a>
                  <Button secondary widthFull text="Finalizar compra" />
                </a>
              </Link>
            </div>
          </div>
        </article>

        <div className="mt-16">
          <ShelfSlider titleCenter title="Veja tambÃ©m" data={newReleases} />
        </div>
      </section>
    </Main>
  )
}

export default Product

interface PathProps {
  params: { id: string; slug: string }
}

export const getServerSideProps = async (props: PathProps) => {
  return {
    props: {
      product: await getProductByServer(props.params.slug),
      newReleases: await getProductsByQuery('where')
    }
  }
}
