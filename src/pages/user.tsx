import type { NextPage } from 'next'
import Head from 'next/head'
import { useState } from 'react'
import Button from '../components/Button'
import Heading from '../components/Heading'
import { MdLogout, MdNoAccounts } from 'react-icons/md'
import { useAuthContext } from '../contexts/AuthContext'
import Input from '../components/Input'
import CrudCard from '../components/CrudCard'
import UserOption from '../components/UserOption'
import Modal, { ModalStatus } from '../components/Modal'
import { useGlobalContext } from '../contexts/GlobalContext'
import { useUserContext } from '../contexts/UserContext'
import { MdLockOutline } from 'react-icons/md'

const Index: NextPage = () => {
  const { logout } = useAuthContext()
  const { isMobile } = useGlobalContext()
  const { currentUser, setCurrentUser } = useUserContext()

  const [radio, setRadio] = useState('entrega')
  const [modalStatus, setModalStatus] = useState<ModalStatus>(null)

  return (
    <>
      <Head>
        <title>Fireshoes üî• | √Årea do Usu√°rio</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Heading text="√Årea do Usu√°rio" center />
      <section
        className="
          w-11/12 m-auto
          lg:w-full lg:flex
        "
      >
        <aside className="flex flex-col gap-6">
          <UserOption
            radio={radio}
            setRadio={setRadio}
            text="Endere√ßo de entrega"
            value="entrega"
          />
          <UserOption
            radio={radio}
            setRadio={setRadio}
            text="Meios de pagamento"
            value="pagamento"
          />
          <UserOption
            radio={radio}
            setRadio={setRadio}
            text="Compras realizadas"
            value="compras"
          />
          <div>
            <Button
              primary
              text="Fazer logout"
              icon={<MdLogout />}
              onClick={logout}
            />
          </div>
          <div>
            <Button
              secondary
              text="Deletar conta"
              icon={<MdNoAccounts />}
              onClick={logout}
            />
          </div>
        </aside>
        <article
          className="lg:absolute left-0 right-0 mt-6 lg:m-auto "
          style={{ width: 'calc(min(91.666667%,25rem))' }}
        >
          <div>
            {radio === 'entrega' && (
              <ul className="flex flex-col gap-6">
                <CrudCard isActive>
                  <p>Avenida Senador Feij√≥, 350</p>
                  <p>Vila Mathias</p>
                  <p>Santos/SP</p>
                  <p>CEP: 11015-502</p>
                </CrudCard>
                <CrudCard>
                  <p>Avenida Bartolomeu de Gusm√£o, 340</p>
                  <p>Ponta da Praia</p>
                  <p>Santos/SP</p>
                  <p>CEP: 11015-502</p>
                </CrudCard>
                <div className="flex flex-row-reverse">
                  <Button
                    primary
                    text="Cadastrar novo"
                    onClick={() => {
                      setModalStatus('createAdressModal')
                    }}
                  />
                </div>
              </ul>
            )}
          </div>
          <div>
            {radio === 'pagamento' && (
              <ul className="flex flex-col gap-6">
                <CrudCard isActive>
                  <p>Cr√©dito Nubank M√£e</p>
                  <p>‚Ä¢‚Ä¢‚Ä¢‚Ä¢0099</p>
                </CrudCard>
                <CrudCard>
                  <p>Cr√©dito Nubank M√£e</p>
                  <p>‚Ä¢‚Ä¢‚Ä¢‚Ä¢0099</p>
                </CrudCard>
                <div className="flex flex-row-reverse">
                  <Button
                    primary
                    text="Cadastrar novo"
                    onClick={() => {
                      setModalStatus('createPaymentMethodModal')
                    }}
                  />
                </div>
              </ul>
            )}
          </div>

          <div>
            {radio === 'compras' && (
              <ul>
                <p className="text-center">Compras realizadas</p>
              </ul>
            )}
          </div>
        </article>
      </section>

      {modalStatus === 'createAdressModal' && (
        <Modal modalStatus={modalStatus} setModalStatus={setModalStatus}>
          <form
            onSubmit={(e) => e.preventDefault()}
            className="m-auto flex flex-col gap-6"
            style={{ width: 'calc(min(91.666667%, 20rem))' }}
          >
            <Heading text="Novo endere√ßo" small center />
            <Input
              text="CEP:"
              type="text"
              name="adressPostalCode"
              required
              widthFull
              placeholder="00.000-000"
              onChange={(e) =>
                setCurrentUser({
                  ...currentUser,
                  adress: {
                    ...currentUser?.adress,
                    postalCode: e.target.value
                  }
                })
              }
            />
            <Input
              text="Logradouro:"
              type="text"
              name="adressStreet"
              required
              widthFull
              onChange={(e) =>
                setCurrentUser({
                  ...currentUser,
                  adress: {
                    ...currentUser?.adress,
                    street: e.target.value
                  }
                })
              }
            />

            <div
              className="grid gap-6"
              style={{ gridTemplateColumns: '2fr 2fr 8fr' }}
            >
              <Input
                text="N√∫mero:"
                type="text"
                name="adressNumber"
                required
                widthFull
                onChange={(e) =>
                  setCurrentUser({
                    ...currentUser,
                    adress: {
                      ...currentUser?.adress,
                      number: e.target.value
                    }
                  })
                }
              />
              <Input
                text="Complemento:"
                type="text"
                name="adressComplement"
                widthFull
                onChange={(e) =>
                  setCurrentUser({
                    ...currentUser,
                    adress: {
                      ...currentUser?.adress,
                      complement: e.target.value
                    }
                  })
                }
              />
              <Input
                text="Bairro:"
                type="text"
                name="adressNeighborhood"
                required
                widthFull
                onChange={(e) =>
                  setCurrentUser({
                    ...currentUser,
                    adress: {
                      ...currentUser?.adress,
                      neighborhood: e.target.value
                    }
                  })
                }
              />
            </div>
            <div
              className="grid gap-6"
              style={{ gridTemplateColumns: '10fr 2fr' }}
            >
              <Input
                text="Cidade:"
                type="text"
                name="adressCity"
                required
                widthFull
                onChange={(e) =>
                  setCurrentUser({
                    ...currentUser,
                    adress: {
                      ...currentUser?.adress,
                      city: e.target.value
                    }
                  })
                }
              />
              <Input
                text="UF:"
                type="text"
                name="adressState"
                required
                widthFull
                onChange={(e) =>
                  setCurrentUser({
                    ...currentUser,
                    adress: {
                      ...currentUser?.adress,
                      state: e.target.value
                    }
                  })
                }
              />
            </div>

            <div className="flex justify-center flex-wrap gap-4 flex-1">
              <Button primary text="Cadastrar" widthFull={isMobile} />
            </div>
          </form>
        </Modal>
      )}
      {modalStatus === 'createPaymentMethodModal' && (
        <Modal modalStatus={modalStatus} setModalStatus={setModalStatus}>
          <form
            onSubmit={(e) => e.preventDefault()}
            className="m-auto flex flex-col gap-6"
            style={{ width: 'calc(min(91.666667%, 20rem))' }}
          >
            <Heading text="Novo Cart√£o" small center />
            <Input
              text="Apelido do cart√£o:"
              type="text"
              name="paymentMethodAlias"
              required
              widthFull
              placeholder="Banco X"
              onChange={(e) =>
                setCurrentUser({
                  ...currentUser,
                  paymentMethod: {
                    ...currentUser?.paymentMethod,
                    alias: e.target.value
                  }
                })
              }
            />
            <Input
              text="N√∫mero do cart√£o:"
              type="text"
              name="paymentMethodCardNumber"
              required
              widthFull
              icon={<MdLockOutline />}
              onChange={(e) =>
                setCurrentUser({
                  ...currentUser,
                  paymentMethod: {
                    ...currentUser?.paymentMethod,
                    cardNumber: e.target.value
                  }
                })
              }
            />
            <div
              className="grid gap-6"
              style={{ gridTemplateColumns: '6fr 6fr' }}
            >
              <Input
                text="Validade:"
                type="text"
                name="paymentMethodExpirationDate"
                required
                widthFull
                placeholder="00/00"
                onChange={(e) =>
                  setCurrentUser({
                    ...currentUser,
                    paymentMethod: {
                      ...currentUser?.paymentMethod,
                      expirationDate: e.target.value
                    }
                  })
                }
              />
              <Input
                text="CVV:"
                type="text"
                name="paymentMethodSecurityCode"
                required
                widthFull
                icon={<MdLockOutline />}
                onChange={(e) =>
                  setCurrentUser({
                    ...currentUser,
                    paymentMethod: {
                      ...currentUser?.paymentMethod,
                      securityCode: e.target.value
                    }
                  })
                }
              />
            </div>

            <div className="flex justify-center flex-wrap gap-4 flex-1">
              <Button primary text="Cadastrar" widthFull={isMobile} />
            </div>
          </form>
        </Modal>
      )}
    </>
  )
}

export default Index
