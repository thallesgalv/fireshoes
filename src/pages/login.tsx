import type { NextPage } from 'next'
import { useEffect, useState } from 'react'
import { useGlobalContext } from '../contexts/GlobalContext'
import Head from 'next/head'
import Heading from '../components/Heading'
import Input from '../components/Input'
import Button from '../components/Button'
import Modal from '../components/Modal'
import { MdLockOutline } from 'react-icons/md'
import { useAuthContext, User } from '../contexts/AuthContext'
import Router from 'next/router'

const Login: NextPage = () => {
  const { isMobile } = useGlobalContext()
  const [modalActive, setModalActive] = useState(false)
  const { currentUser, setCurrentUser } = useAuthContext()

  const {
    loginDataForm,
    setLoginDataForm,
    createUserDataForm,
    setCreateUserDataForm,
    signUp,
    login,
    signInWithGoogle
  } = useAuthContext()

  useEffect(() => {
    if (currentUser?.id) Router.push('/')
  }, [currentUser])

  return (
    <>
      <Head>
        <title>Fireshoes ðŸ”¥ | Login</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <section>
        <Heading text="Login" center />
        <form
          onSubmit={(e) => e.preventDefault()}
          className="m-auto flex flex-col gap-6"
          style={{ width: 'calc(min(90%, 20rem))' }}
        >
          <Input
            text="E-mail:"
            type="email"
            id="loginEmail"
            required
            widthFull
            onChange={(e) =>
              setLoginDataForm({
                ...loginDataForm,
                email: e.target.value
              })
            }
          />
          <Input
            text="Senha:"
            type="password"
            id="loginPassword"
            icon={<MdLockOutline />}
            required
            widthFull
            onChange={(e) =>
              setLoginDataForm({
                ...loginDataForm,
                password: e.target.value
              })
            }
          />
          <div className="flex justify-between flex-wrap">
            <Button primary text="Confirmar" onClick={login} />
            <Button
              secondary
              text="Entrar com o Google"
              google
              onClick={signInWithGoogle}
            />
            <p className="flex-grow mt-4 text-xs">
              Esqueceu a senha? Clique{' '}
              <span className="text-primary font-semibold cursor-pointer">
                aqui
              </span>
            </p>
          </div>
        </form>
      </section>
      <section className="mt-14">
        <Heading text="Criar Conta" center />
        <div
          className="flex justify-center w-full mt-6"
          onClick={() => setModalActive(!modalActive)}
        >
          <Button primary text="Criar agora" />
        </div>
      </section>

      <Modal modalActive={modalActive} setModalActive={setModalActive}>
        <form
          onSubmit={(e) => e.preventDefault()}
          className="m-auto flex flex-col gap-6"
          style={{ width: 'calc(min(90%, 20rem))' }}
        >
          <Input
            text="Nome completo:"
            type="text"
            id="createUserName"
            required
            widthFull
            onChange={(e) =>
              setCreateUserDataForm({
                ...createUserDataForm,
                name: e.target.value
              })
            }
          />
          <Input
            text="E-mail:"
            type="email"
            id="createUserEmail"
            required
            widthFull
            onChange={(e) =>
              setCreateUserDataForm({
                ...createUserDataForm,
                email: e.target.value
              })
            }
          />
          <Input
            text="CPF:"
            type="text"
            id="createUserCPF"
            placeholder="999.999.999-99"
            required
            widthFull
            onChange={(e) =>
              setCreateUserDataForm({
                ...createUserDataForm,
                cpf: e.target.value
              })
            }
          />
          <Input
            text="Data de Nascimento:"
            type="text"
            id="createUserBirthDate"
            placeholder="DD/MM/AAAA"
            required
            widthFull
            onChange={(e) =>
              setCreateUserDataForm({
                ...createUserDataForm,
                birthDate: e.target.value
              })
            }
          />
          <Input
            text="Senha:"
            type="password"
            id="createUserPassword"
            icon={<MdLockOutline />}
            required
            widthFull
            onChange={(e) =>
              setCreateUserDataForm({
                ...createUserDataForm,
                password: e.target.value
              })
            }
          />
          <div className="flex justify-between flex-wrap gap-4 flex-1">
            <Button
              secondary
              text="Criar conta agora"
              widthFull={isMobile}
              onClick={signUp}
            />
            <Button primary text="Continuar cadastro" widthFull={isMobile} />
          </div>
        </form>
      </Modal>
    </>
  )
}

export default Login
