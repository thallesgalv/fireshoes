import type { NextPage } from 'next'
import { FormEvent, useCallback, useEffect, useState } from 'react'
import { useGlobalContext } from '../contexts/GlobalContext'
import Head from 'next/head'
import Heading from '../components/Heading'
import Input from '../components/Input'
import Button from '../components/Button'
import Modal, { ModalStatus } from '../components/Modal'
import { MdLockOutline } from 'react-icons/md'
import { useAuthContext } from '../contexts/AuthContext'
import { useRouter } from 'next/router'
import { useUserContext } from '../contexts/UserContext'
import { auth } from '../services/firebase'

const Login: NextPage = () => {
  const { isMobile } = useGlobalContext()
  const [modalStatus, setModalStatus] = useState<ModalStatus>(null)
  const router = useRouter()

  const {
    signInWithGoogle,
    signUp,
    login,
    forgotPassword,
    loginDataForm,
    setLoginDataForm,
    setRecoverUserEmail
  } = useAuthContext()

  const { currentUser, setCurrentUser } = useUserContext()

  useEffect(() => {
    if (auth.currentUser?.uid) router.push('/')
  }, [currentUser])

  const handleChange = useCallback(
    (e: FormEvent<HTMLInputElement>) => {
      setCurrentUser({
        ...currentUser,
        [e.currentTarget.name]: e.currentTarget.value
      })
    },
    [currentUser]
  )

  const handleLoginInput = useCallback(
    (e: FormEvent<HTMLInputElement>) => {
      setLoginDataForm({
        ...loginDataForm,
        [e.currentTarget.name]: e.currentTarget.value
      })
    },
    [loginDataForm]
  )

  return (
    <>
      <Head>
        <title>Fireshoes ðŸ”¥ | Login</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <section className="w-11/12 lg:w-full m-auto">
        <Heading text="Login" center />
        <form
          onSubmit={(e) => e.preventDefault()}
          className="m-auto flex flex-col gap-6 w-full md:w-80"
        >
          <Input
            text="E-mail:"
            type="email"
            name="email"
            htmlFor="loginUserEmail"
            required
            widthFull
            onChange={handleLoginInput}
          />
          <Input
            text="Senha:"
            type="password"
            name="password"
            htmlFor="loginUserPassword"
            icon={<MdLockOutline />}
            required
            widthFull
            onChange={handleLoginInput}
          />
          <div className="flex justify-between flex-wrap gap-6">
            <Button
              primary
              text="Confirmar"
              widthFull={isMobile}
              onClick={login}
            />
            <Button
              secondary
              google
              text="Entrar com o Google"
              widthFull={isMobile}
              onClick={signInWithGoogle}
            />
            <p className="flex-grow text-xs">
              Esqueceu a senha? Clique
              <span
                className="text-primary font-semibold cursor-pointer"
                onClick={() => {
                  setModalStatus('forgotPasswordModal')
                }}
              >
                {' '}
                aqui
              </span>
            </p>
          </div>
        </form>
      </section>
      <section className="mt-14">
        <Heading text="Criar conta" center />
        <div
          className="flex justify-center w-full mt-6"
          onClick={() => {
            setModalStatus('createAccountModal')
          }}
        >
          <Button primary text="Criar agora" />
        </div>
      </section>

      {modalStatus === 'createAccountModal' && (
        <Modal modalStatus={modalStatus} setModalStatus={setModalStatus}>
          <form
            onSubmit={(e) => e.preventDefault()}
            className="m-auto flex flex-col gap-6 w-full md:w-80"
          >
            <Heading text="Crie sua conta" small center />
            <Input
              text="Nome completo:"
              name="name"
              htmlFor="createUserName"
              required
              widthFull
              onChange={handleChange}
            />
            <Input
              text="E-mail:"
              type="email"
              name="email"
              htmlFor="createUserEmail"
              required
              widthFull
              onChange={handleChange}
            />
            <Input
              text="Senha:"
              type="password"
              name="password"
              htmlFor="createUserPassword"
              icon={<MdLockOutline />}
              required
              widthFull
              onChange={handleChange}
            />
            <div className="flex justify-center flex-wrap gap-4 flex-1">
              <Button
                primary
                text="Criar conta agora"
                widthFull={isMobile}
                onClick={signUp}
              />
            </div>
          </form>
        </Modal>
      )}

      {modalStatus === 'forgotPasswordModal' && (
        <Modal modalStatus={modalStatus} setModalStatus={setModalStatus}>
          <form
            onSubmit={(e) => e.preventDefault()}
            className="m-auto flex flex-col gap-6 w-full md:w-80"
          >
            <Heading text="Recuperar senha" small center />
            <Input
              text="E-mail:"
              type="email"
              name="recoverUserEmail"
              required
              widthFull
              onChange={(e) => setRecoverUserEmail(e.target.value)}
            />
            <div className="flex justify-center flex-wrap gap-4 flex-1">
              <Button
                primary
                text="Enviar-email"
                widthFull={isMobile}
                onClick={() => {
                  forgotPassword()
                  setModalStatus(null)
                }}
              />
            </div>
          </form>
        </Modal>
      )}
    </>
  )
}
export default Login
